<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>nu</string>
		<string>Nukefile</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!.*\bnush\b</string>
	<key>keyEquivalent</key>
	<string>^~N</string>
	<key>name</key>
	<string>Nu</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>name</key>
			<string>comment.line.nu</string>
			<key>begin</key>
			<string>(;+|#+)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.nudoc.nu</string>
					<key>match</key>
					<string>(@)(abstract|copyright|discussion|file|header|info)(.*)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.nudoc.nu</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.comment.nudoc.nu</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.language.nu</string>
			<key>match</key>
			<string>(?&lt;=\A|\s|\(|:)(t|nil|YES|NO)(?=\Z|\s|\))</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.numeric.nu</string>
			<key>match</key>
			<string>(?&lt;=\A|\s|\(|:)[+-]?([Nn][Aa][Nn]|[Ii][Nn][Ff]([Ii][Nn][Ii][Tt][Yy])?|(([0-9]+(\.([0-9]+)?)?|\.[0-9]+)([Ee][+-]?[0-9]+)?|(0[Xx][0-9a-fA-F]+(\.([0-9a-fA-F]+)?)?|\.[0-9a-fA-F]+)([Pp][+-]?[0-9a-fA-F]+)?)|(0[Xx][0-9a-fA-F]+|0[0-7]+|[0-9]+))(?=\Z|\s|\))</string>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.character.literal.nu</string>
			<key>match</key>
			<string>&apos;(.|\\([0-7]{3}|x[0-9a-fA-F]{2}|u[0-9]{4}|.))&apos;</string>
		</dict>
		<dict>
			<key>name</key>
			<string>string.regexp.nu</string>
			<key>begin</key>
			<string>(/)(?=[^ ])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regexp.begin.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/)([isxlm]*)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.regex.end.nu</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>string.unquoted.heredoc.unescaped.nu</string>
			<key>begin</key>
			<string>&lt;&lt;[-](.*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\1</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.nu</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolated-nu</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>string.unquoted.heredoc.escaped.nu</string>
			<key>begin</key>
			<string>&lt;&lt;[+](.*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\1</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.nu</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped-character</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolated-nu</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.double.escaped.nu</string>
			<key>begin</key>
			<string>\+?&quot;</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>&quot;</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.nu</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped-character</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolated-nu</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>string.quoted.double.unescaped.nu</string>
			<key>begin</key>
			<string>-&quot;</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>&quot;</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.nu</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolated-nu</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.quoted-list.nu</string>
			<key>begin</key>
			<string>\(\s*(quote)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.operator.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.quoted-list.nu</string>
			<key>begin</key>
			<string>(\&apos;)\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.quoted-list.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>constant.other.symbol.nu</string>
			<key>match</key>
			<string>(?&lt;=\A|\s|\(|:)(\&apos;)[\*\w-]+(?=\Z|\s|\))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.quoted-symbol.nu</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>variable.other.global.nu</string>
			<key>match</key>
			<string>(?&lt;=\A|\s|\(|:)(\$)[\w-]+(?=\Z|\s|\))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.nu</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.class.nu</string>
			<key>begin</key>
			<string>\((class)\s+(\w+)(\s+(is)\s+(\w+))?</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.nu</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.nu</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.other.nu</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.inherited-class.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\((ivars|ivar-accessors)\)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.nu</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>\((ivar)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.nu</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\((\w+)\)\s+(\w+)</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.nu</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.other.instance.nu</string>
								</dict>
							</dict>
						</dict>
					</array>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.function.nu</string>
					<key>begin</key>
					<string>\((?=(imethod|cmethod|\-|\+))</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(imethod|cmethod|\-|\+)(\s+\((\w+\*?)\))?</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.nu</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>meta.return-type.nu</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>storage.type.nu</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(is)(?=\Z|\s|\))</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.nu</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(\w+:)\s*(\((\w+\*?)\))?\s*(\w+)\s+</string>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>entity.name.function.nu</string>
										</dict>
										<key>3</key>
										<dict>
											<key>name</key>
											<string>storage.type.nu</string>
										</dict>
										<key>4</key>
										<dict>
											<key>name</key>
											<string>variable.parameter.function.nu</string>
										</dict>
									</dict>
								</dict>
								<dict>
									<key>match</key>
									<string>(\w+)\s+</string>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>entity.name.function.nu</string>
										</dict>
									</dict>
								</dict>
							</array>
						</dict>
						<dict>
							<key>name</key>
							<string>variable.other.instance.special.nu</string>
							<key>match</key>
							<string>(?&lt;=\A|\s|\(|:)(super|self)(?=\Z|\s|\))</string>
						</dict>
						<dict>
							<key>name</key>
							<string>variable.other.instance.nu</string>
							<key>match</key>
							<string>(?&lt;=\A|\s|\(|:)(\@)\w+(?=\Z|\s|\))</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.variable.instance.nu</string>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>name</key>
							<string>meta.expression.nu</string>
							<key>begin</key>
							<string>\(\s*((\@)\w+)\s+</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.other.instance.nu</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.variable.instance.nu</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>name</key>
							<string>meta.expression.nu</string>
							<key>begin</key>
							<string>\(\s*(super|self)\s+</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.other.instance.nu</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.expression.nu</string>
			<key>begin</key>
			<string>\(\s*(send|call|eval|parse|context|while|until|for|break|continue|cond|case|if|else|then|unless|progn|return|return-from)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.operator.control.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.expression.nu</string>
			<key>begin</key>
			<string>\(\s*(car|head|first|cdr|tail|rest|min|max|cons|append)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.operator.list.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.expression.nu</string>
			<key>begin</key>
			<string>\(\s*(atom\??|char\?|defined|list\?|number\?|null\?|pair\?|string\?|symbol\?|zero\?)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.operator.predicate.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.expression.nu</string>
			<key>begin</key>
			<string>\(\s*(\&amp;|\||and|or|not|\&gt;|\&lt;|\&gt;=|\&lt;=|==|\!=|eq\??|ne\??|gt\??|lt\??|ge\??|le\??|\&lt;\&lt;|\&gt;\&gt;|\*|\/|\%|\+|\-|\*\*|synchronized|array|dict|list|regex|uname|system|gets|puts|print|beep|random|srandom|sleep|exit|help|\?|let|macrox)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.operator.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.expression.nu</string>
			<key>begin</key>
			<string>\(\s*(global|set)\s+([\w-]+)?</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.operator.assignment.nu</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.expression.nu</string>
			<key>begin</key>
			<string>\(\s*(def|function)\s+([\w-]+)\s+\(([\*\w\s-]*)\)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.function.nu</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.nu</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.expression.nu</string>
			<key>begin</key>
			<string>\(\s*(do)\s+\(([\w\s-]*)\)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.operator.function.nu</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.expression.nu</string>
			<key>begin</key>
			<string>\(\s*(macro|macro-0|macro-1)\s+([\w-]+)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.function.nu</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.expression.quasiquote.nu</string>
			<key>begin</key>
			<string>\(\s*(quasiquote)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.operator.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#quasiquote-form</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.expression.quasiquote.nu</string>
			<key>begin</key>
			<string>(\`)\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.quasiquote.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#quasiquote-form</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.expression.nu</string>
			<key>begin</key>
			<string>\(\s*(try)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.operator.exception.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.expression.nu</string>
					<key>begin</key>
					<string>\(\s*(catch)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.operator.exception.nu</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.expression.nu</string>
			<key>begin</key>
			<string>\(\s*(throw\*?)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.operator.exception.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\(\s*(load|import)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\((assert_equal|assert_not_equal|assert_throws|assert_in_delta|assert_true|assert_false|assert_less_than|assert_greater_than)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.nutest.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\((application-tasks|bundle-tasks|compilation-tasks|dylib-tasks|framework-tasks|library-tasks)\)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.nuke.nu</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.nuke.task.nu</string>
			<key>begin</key>
			<string>\((?=(task).*is)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.nuke.task.nu</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\()\s*(task)\s+\&quot;(\w+)\&quot;\s*((=&gt;)\s*\&quot;(\w+)\&quot;)?\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.nuke.task.nu</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.task.nuke.nu</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>support.operator.rocket.nu</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.dependant-task.nuke.nu</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>keyword.other.nu</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(is)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.nu</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.nuke.task.default.nu</string>
			<key>match</key>
			<string>\(\s*(task)\s+\&quot;(default)\&quot;\s*(=&gt;)\s*\&quot;(\w+)\&quot;\)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.nuke.task.nu</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.task.nuke.nu</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.operator.rocket.nu</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.dependant-task.nuke.nu</string>
				</dict>
			</dict>
		</dict>
		<dict>
			<key>name</key>
			<string>meta.expression.nu</string>
			<key>begin</key>
			<string>\(</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>escaped-character</key>
		<dict>
			<key>match</key>
			<string>\\([0-7]{3}|x[0-9a-fA-F]{2}|u[0-9]{4}|.)</string>
			<key>name</key>
			<string>constant.character.escape.nu</string>
		</dict>
		<key>interpolated-nu</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>source.nu.embedded.source</string>
					<key>match</key>
					<string>#\{(\})</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.nu</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>source.nu.embedded.source.empty</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>source.nu.embedded.source</string>
					<key>begin</key>
					<string>#\{</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.nu</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>quasiquote-form</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.expression.quasiquote-eval.nu</string>
					<key>match</key>
					<string>(?&lt;=\A|\s|\(|:)(\,)\w+(?=\Z|\s|\))</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.quasiquote-eval.nu</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.expression.quasiquote-eval.nu</string>
					<key>begin</key>
					<string>(\,)\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.quasiquote-eval.nu</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#quasiquote-form</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.expression.quasiquote-eval.nu</string>
					<key>begin</key>
					<string>\(\s*(quasiquote-eval)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.operator.nu</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#quasiquote-form</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.expression.quasiquote-splice.nu</string>
					<key>begin</key>
					<string>(\,\@)\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.quasiquote-splice.nu</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#quasiquote-form</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.expression.quasiquote-splice.nu</string>
					<key>begin</key>
					<string>\(\s*(quasiquote-splice)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.operator.nu</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#quasiquote-form</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.nu</string>
	<key>uuid</key>
	<string>F8A96494-C89A-4CA4-A2D3-6A5A4ED56FD7</string>
</dict>
</plist>
